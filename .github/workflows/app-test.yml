name: LEMP Stack

on:
  schedule:
  - cron:  '30 00 * * *'
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  Nginx-PHP82-Mariadb:
    strategy:
      matrix:
        os: [ubuntu-latest, self-hosted]
        phpversion: ['8.2', '8.1', '8.0', '7.4', '7.2', '7.1']
    runs-on: ${{ matrix.os }}
    env:
      SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
    steps:
    - uses: actions/checkout@v2
    - name: Build the Docker image nginx php 8.2
      run: docker-compose -f "docker-compose.yml" up -d --build
      env:
          PHP_VERSION: ${{ matrix.phpversion }}
          XDEBUG: true
          DISPLAY_PHPERROR: true
          SERVER_ROOT:  /var/www/
          APP_CODE_PATH_HOST: /tmp/app
          DB_NAME: test
          DB_USER:  admin
          DB_PASSWORD:  password
          DB_ROOT_PASSWORD: password
          DATA_PATH_HOST: /tmp/db
          MARIADB_VERSION:  10.7
    - name: PHP version check
      run : docker exec lemp-stack_nginx_1 php -v
    - name: Mongodb driver check
      run:  docker exec lemp-stack_nginx_1 php -m | grep mongo
    - name: Mysql Driver check
      run: docker exec lemp-stack_nginx_1 php -m | grep mysqli
    - name: Composer test
      run: docker exec lemp-stack_nginx_1 composer
    - name: Web site Test
      run: |
        docker exec lemp-stack_nginx_1 sudo wget -O /var/www/index.php https://raw.githubusercontent.com/deck-app/stack-preview-screen/main/install/index.html
        sudo curl -I --http2 http://localhost:5590/
    - name: Laravel8 test
      run:  docker exec lemp-stack_nginx_1 sudo composer create-project --prefer-dist laravel/laravel:^8.0
    - name: Verify MariaDB running from host, create Database and show Database
      run: |
        while ! docker exec lemp-stack_mariadb_1 mysqladmin --user=root --password=password --host "mariadb" ping --silent &> /dev/null ; do
            echo "Waiting for database connection..."
            sleep 2
        done
    - name: Check MariaDB version
      run:  docker exec lemp-stack_mariadb_1 mysql -uroot -ppassword -e "SHOW VARIABLES LIKE '%version%';"
    - name: Verify MariaDB database from user
      run:  docker exec lemp-stack_mariadb_1 mysql -uadmin -ppassword -e "SHOW DATABASES"
    - name: Create a Database
      run:  docker exec lemp-stack_mariadb_1 mysql -uroot -ppassword -e "CREATE DATABASE deckapp"
    - name: Verify Database create or not
      run:  docker exec lemp-stack_mariadb_1 mysql -uroot -ppassword -e "SHOW DATABASES"
    - name: Database connection check
      run: |
        docker exec lemp-stack_nginx_1 sudo wget -O /var/www/db.php https://raw.githubusercontent.com/nabad600/apache_php/master/connection.php
        docker exec lemp-stack_nginx_1 sudo php /var/www/db.php
    - name: Destroy Container and file
      run:  |
        docker-compose down
        echo "y" | docker system prune -a
        echo "y" | docker image prune
        echo "y" | docker volume prune
        sudo rm -rf /tmp/app
        sudo rm -rf /tmp/db
    - name: Slack Notification
      uses: 8398a7/action-slack@v3
      with: 
        status: ${{ job.status }}
        fields: repo,message,commit,author,action,eventName,ref,workflow
        channel: '#github_action_status'
      if: always()
  # Nginx-PHP82-Mariadb-ARM64:
  #   runs-on: self-hosted
  #   steps:
  #   - uses: actions/checkout@v2
  #   - name: Build the Docker image nginx php 8.2
  #     run: docker-compose -f "docker-compose.yml" up -d --build
  #     env:
  #         PHP_VERSION: "8.2"
  #         XDEBUG: true
  #         DISPLAY_PHPERROR: true
  #         SERVER_ROOT:  /var/www/
  #         APP_CODE_PATH_HOST: /tmp/app/
  #         DB_NAME: test
  #         DB_USER:  admin
  #         DB_PASSWORD:  password
  #         DB_ROOT_PASSWORD: password
  #         DATA_PATH_HOST: /tmp/mariadb/
  #         MARIADB_VERSION:  10.7
  #   - name: PHP version check
  #     run : docker exec lemp-stack_nginx_1 php -v
  #   - name: Mongodb driver check
  #     run:  docker exec lemp-stack_nginx_1 php -m
  #   - name: Mysql Driver check
  #     run: docker exec lemp-stack_nginx_1 php -m | grep mysqli
  #   - name: Composer test
  #     run: docker exec lemp-stack_nginx_1 composer
  #   - name: Web site Test
  #     run: |
  #       sudo wget -O /tmp/app/index.php https://raw.githubusercontent.com/deck-app/stack-preview-screen/main/install/index.html
  #       curl -i http://localhost:5590/
  #   - name: Laravel8 test
  #     run:  docker exec lemp-stack_nginx_1 sudo composer create-project --prefer-dist laravel/laravel:^8.0
  #   - name: Verify MariaDB running from host, create Database and show Database
  #     run: |
  #       while ! docker exec lemp-stack_mariadb_1 mysqladmin --user=root --password=password --host "mariadb" ping --silent &> /dev/null ; do
  #           echo "Waiting for database connection..."
  #           sleep 2
  #       done
  #   - name: Check MariaDB version
  #     run:  docker exec lemp-stack_mariadb_1 mysql -uroot -ppassword -e "SHOW VARIABLES LIKE '%version%';"
  #   - name: Verify MariaDB database from user
  #     run:  docker exec lemp-stack_mariadb_1 mysql -uadmin -ppassword -e "SHOW DATABASES"
  #   - name: Create a Database
  #     run:  docker exec lemp-stack_mariadb_1 mysql -uroot -ppassword -e "CREATE DATABASE deckapp"
  #   - name: Verify Database create or not
  #     run:  docker exec lemp-stack_mariadb_1 mysql -uroot -ppassword -e "SHOW DATABASES"
  #   - name: Database connection check
  #     run: |
  #       docker exec lemp-stack_nginx_1 sudo wget -O /var/www/db.php https://raw.githubusercontent.com/nabad600/apache_php/master/connection.php
  #       docker exec lemp-stack_nginx_1 sudo php /var/www/db.php
  #   - name: Destroy Container 
  #     run: |
  #       docker-compose down
  #       echo "y" | docker system prune -a
  #       while [ -d /tmp/app ]; do
  #       echo "password" | sudo -S whoami
  #       sudo rm -rf /tmp/app/
  #       done
  #       while [ -d /tmp/mariadb ]; do
  #       echo "password" | sudo -S whoami
  #       sudo rm -rf /tmp/mariadb/
  #       done


  # Nginx-PHP81-Mariadb-AMD64:
  #   runs-on: ubuntu-latest
  #   steps:
  #   - uses: actions/checkout@v2
  #   - name: Build the Docker image nginx php 8.1
  #     run: docker-compose -f "docker-compose.yml" up -d --build
  #     env:
  #         PHP_VERSION: "8.1"
  #         XDEBUG: true
  #         DISPLAY_PHPERROR: true
  #         SERVER_ROOT:  /var/www/
  #         APP_CODE_PATH_HOST: /tmp/app
  #         DB_NAME: test
  #         DB_USER:  admin
  #         DB_PASSWORD:  password
  #         DB_ROOT_PASSWORD: password
  #         DATA_PATH_HOST: /tmp/db
  #         MARIADB_VERSION:  10.7
  #   - name: PHP version check
  #     run : docker exec lemp-stack_nginx_1 php -v
  #   - name: Mongodb driver check
  #     run:  docker exec lemp-stack_nginx_1 php -m | grep mongo
  #   - name: Mysql Driver check
  #     run: docker exec lemp-stack_nginx_1 php -m | grep mysqli
  #   - name: Composer test
  #     run: docker exec lemp-stack_nginx_1 composer
  #   - name: Web site Test
  #     run: |
  #       docker exec lemp-stack_nginx_1 sudo wget -O /var/www/index.php https://raw.githubusercontent.com/deck-app/stack-preview-screen/main/install/index.html
  #       sudo curl -I --http2 http://localhost:5590/
  #   - name: Laravel8 test
  #     run:  docker exec lemp-stack_nginx_1 sudo composer create-project --prefer-dist laravel/laravel:^8.0
  #   - name: Verify MariaDB running from host, create Database and show Database
  #     run: |
  #       while ! docker exec lemp-stack_mariadb_1 mysqladmin --user=root --password=password --host "mariadb" ping --silent &> /dev/null ; do
  #           echo "Waiting for database connection..."
  #           sleep 2
  #       done
  #   - name: Check MariaDB version
  #     run:  docker exec lemp-stack_mariadb_1 mysql -uroot -ppassword -e "SHOW VARIABLES LIKE '%version%';"
  #   - name: Verify MariaDB database from user
  #     run:  docker exec lemp-stack_mariadb_1 mysql -uadmin -ppassword -e "SHOW DATABASES"
  #   - name: Create a Database
  #     run:  docker exec lemp-stack_mariadb_1 mysql -uroot -ppassword -e "CREATE DATABASE deckapp"
  #   - name: Verify Database create or not
  #     run:  docker exec lemp-stack_mariadb_1 mysql -uroot -ppassword -e "SHOW DATABASES"
  #   - name: Database connection check
  #     run: |
  #       docker exec lemp-stack_nginx_1 sudo wget -O /var/www/db.php https://raw.githubusercontent.com/nabad600/apache_php/master/connection.php
  #       docker exec lemp-stack_nginx_1 sudo php /var/www/db.php
  #   - name: Destroy Container and file
  #     run:  |
  #       docker-compose down
  #       echo "y" | docker image prune -a
  #       echo "y" | docker volume prune
  #       sudo rm -rf /tmp/app
  #       sudo rm -rf /tmp/db
  # Nginx-PHP81-Mariadb-ARM64:
  #   runs-on: self-hosted
  #   steps:
  #   - uses: actions/checkout@v2
  #   - name: Build the Docker image nginx php 8.1
  #     run: docker-compose -f "docker-compose.yml" up -d --build
  #     env:
  #         PHP_VERSION: "8.1"
  #         XDEBUG: true
  #         DISPLAY_PHPERROR: true
  #         SERVER_ROOT:  /var/www/
  #         APP_CODE_PATH_HOST: /tmp/app/
  #         DB_NAME: test
  #         DB_USER:  admin
  #         DB_PASSWORD:  password
  #         DB_ROOT_PASSWORD: password
  #         DATA_PATH_HOST: /tmp/mariadb/
  #         MARIADB_VERSION:  10.7
  #   - name: PHP version check
  #     run : docker exec lemp-stack_nginx_1 php -v
  #   - name: Mongodb driver check
  #     run:  docker exec lemp-stack_nginx_1 php -m
  #   - name: Mysql Driver check
  #     run: docker exec lemp-stack_nginx_1 php -m | grep mysqli
  #   - name: Composer test
  #     run: docker exec lemp-stack_nginx_1 composer
  #   - name: Web site Test
  #     run: |
  #       sudo wget -O /tmp/app/index.php https://raw.githubusercontent.com/deck-app/stack-preview-screen/main/install/index.html
  #       curl -i http://localhost:5590/
  #   - name: Laravel8 test
  #     run:  docker exec lemp-stack_nginx_1 sudo composer create-project --prefer-dist laravel/laravel:^8.0
  #   - name: Verify MariaDB running from host, create Database and show Database
  #     run: |
  #       while ! docker exec lemp-stack_mariadb_1 mysqladmin --user=root --password=password --host "mariadb" ping --silent &> /dev/null ; do
  #           echo "Waiting for database connection..."
  #           sleep 2
  #       done
  #   - name: Check MariaDB version
  #     run:  docker exec lemp-stack_mariadb_1 mysql -uroot -ppassword -e "SHOW VARIABLES LIKE '%version%';"
  #   - name: Verify MariaDB database from user
  #     run:  docker exec lemp-stack_mariadb_1 mysql -uadmin -ppassword -e "SHOW DATABASES"
  #   - name: Create a Database
  #     run:  docker exec lemp-stack_mariadb_1 mysql -uroot -ppassword -e "CREATE DATABASE deckapp"
  #   - name: Verify Database create or not
  #     run:  docker exec lemp-stack_mariadb_1 mysql -uroot -ppassword -e "SHOW DATABASES"
  #   - name: Database connection check
  #     run: |
  #       docker exec lemp-stack_nginx_1 sudo wget -O /var/www/db.php https://raw.githubusercontent.com/nabad600/apache_php/master/connection.php
  #       docker exec lemp-stack_nginx_1 sudo php /var/www/db.php
  #   - name: Destroy Container 
  #     run: |
  #       docker-compose down
  #       echo "y" | docker system prune -a
  #       while [ -d /tmp/app ]; do
  #       echo "password" | sudo -S whoami
  #       sudo rm -rf /tmp/app/
  #       done
  #       while [ -d /tmp/mariadb ]; do
  #       echo "password" | sudo -S whoami
  #       sudo rm -rf /tmp/mariadb/
  #       done


  # Nginx-PHP8-Mariadb-AMD64:
  #   runs-on: ubuntu-latest
  #   steps:
  #   - uses: actions/checkout@v2
  #   - name: Build the Docker image nginx php 8.0
  #     run: docker-compose -f "docker-compose.yml" up -d --build
  #     env:
  #         PHP_VERSION: "8.0"
  #         XDEBUG: true
  #         DISPLAY_PHPERROR: true
  #         SERVER_ROOT:  /var/www/
  #         APP_CODE_PATH_HOST: /tmp/app
  #         DB_NAME: test
  #         DB_USER:  admin
  #         DB_PASSWORD:  password
  #         DB_ROOT_PASSWORD: password
  #         DATA_PATH_HOST: /tmp/db
  #         MARIADB_VERSION:  10.7
  #   - name: PHP version check
  #     run : docker exec lemp-stack_nginx_1 php -v
  #   - name: Mongodb driver check
  #     run:  docker exec lemp-stack_nginx_1 php -m | grep mongo
  #   - name: Mysql Driver check
  #     run: docker exec lemp-stack_nginx_1 php -m | grep mysqli
  #   - name: Composer test
  #     run: docker exec lemp-stack_nginx_1 composer
  #   - name: Web site Test
  #     run: |
  #       docker exec lemp-stack_nginx_1 sudo wget -O /var/www/index.php https://raw.githubusercontent.com/deck-app/stack-preview-screen/main/install/index.html
  #       sudo curl -I --http2 http://localhost:5590/
  #   - name: Laravel8 test
  #     run:  docker exec lemp-stack_nginx_1 sudo composer create-project --prefer-dist laravel/laravel:^8.0
  #   - name: Verify MariaDB running from host, create Database and show Database
  #     run: |
  #       while ! docker exec lemp-stack_mariadb_1 mysqladmin --user=root --password=password --host "mariadb" ping --silent &> /dev/null ; do
  #           echo "Waiting for database connection..."
  #           sleep 2
  #       done
  #   - name: Check MariaDB version
  #     run:  docker exec lemp-stack_mariadb_1 mysql -uroot -ppassword -e "SHOW VARIABLES LIKE '%version%';"
  #   - name: Verify MariaDB database from user
  #     run:  docker exec lemp-stack_mariadb_1 mysql -uadmin -ppassword -e "SHOW DATABASES"
  #   - name: Create a Database
  #     run:  docker exec lemp-stack_mariadb_1 mysql -uroot -ppassword -e "CREATE DATABASE deckapp"
  #   - name: Verify Database create or not
  #     run:  docker exec lemp-stack_mariadb_1 mysql -uroot -ppassword -e "SHOW DATABASES"
  #   - name: Database connection check
  #     run: |
  #       docker exec lemp-stack_nginx_1 sudo wget -O /var/www/db.php https://raw.githubusercontent.com/nabad600/apache_php/master/connection.php
  #       docker exec lemp-stack_nginx_1 sudo php /var/www/db.php
  #   - name: Destroy Container and file
  #     run:  |
  #       docker-compose down
  #       echo "y" | docker image prune -a
  #       echo "y" | docker volume prune
  #       sudo rm -rf /tmp/app
  #       sudo rm -rf /tmp/db
  # Nginx-PHP8-Mariadb-ARM64:
  #   runs-on: self-hosted
  #   steps:
  #   - uses: actions/checkout@v2
  #   - name: Build the Docker image nginx php 8.0
  #     run: docker-compose -f "docker-compose.yml" up -d --build
  #     env:
  #         PHP_VERSION: "8.0"
  #         XDEBUG: true
  #         DISPLAY_PHPERROR: true
  #         SERVER_ROOT:  /var/www/
  #         APP_CODE_PATH_HOST: /tmp/app
  #         DB_NAME: test
  #         DB_USER:  admin
  #         DB_PASSWORD:  password
  #         DB_ROOT_PASSWORD: password
  #         DATA_PATH_HOST: /tmp/mariadb
  #         MARIADB_VERSION:  10.7
  #   - name: PHP version check
  #     run : docker exec lemp-stack_nginx_1 php -v
  #   - name: Mongodb driver check
  #     run:  docker exec lemp-stack_nginx_1 php -m 
  #   - name: Mysql Driver check
  #     run: docker exec lemp-stack_nginx_1 php -m | grep mysqli
  #   - name: Composer test
  #     run: docker exec lemp-stack_nginx_1 composer
  #   - name: Web site Test
  #     run: |
  #       docker exec lemp-stack_nginx_1 sudo wget -O /var/www/index.php https://raw.githubusercontent.com/deck-app/stack-preview-screen/main/install/index.html
  #       curl -i http://localhost:5590/
  #   - name: Laravel8 test
  #     run:  docker exec lemp-stack_nginx_1 sudo composer create-project --prefer-dist laravel/laravel:^8.0
  #   - name: Verify MariaDB running from host, create Database and show Database
  #     run: |
  #       while ! docker exec lemp-stack_mariadb_1 mysqladmin --user=root --password=password --host "mariadb" ping --silent &> /dev/null ; do
  #           echo "Waiting for database connection..."
  #           sleep 2
  #       done
  #   - name: Check MariaDB version
  #     run:  docker exec lemp-stack_mariadb_1 mysql -uroot -ppassword -e "SHOW VARIABLES LIKE '%version%';"
  #   - name: Verify MariaDB database from user
  #     run:  docker exec lemp-stack_mariadb_1 mysql -uadmin -ppassword -e "SHOW DATABASES"
  #   - name: Create a Database
  #     run:  docker exec lemp-stack_mariadb_1 mysql -uroot -ppassword -e "CREATE DATABASE deckapp"
  #   - name: Verify Database create or not
  #     run:  docker exec lemp-stack_mariadb_1 mysql -uroot -ppassword -e "SHOW DATABASES"
  #   - name: Database connection check
  #     run: |
  #       docker exec lemp-stack_nginx_1 sudo wget -O /var/www/db.php https://raw.githubusercontent.com/nabad600/apache_php/master/connection.php
  #       docker exec lemp-stack_nginx_1 sudo php /var/www/db.php
  #   - name: Destroy Container 
  #     run: |
  #       docker-compose down
  #       echo "y" | docker system prune -a
  #       while [ -d /tmp/app ]; do
  #       echo "password" | sudo -S whoami
  #       sudo rm -rf /tmp/app/
  #       done
  #       while [ -d /tmp/mariadb ]; do
  #       echo "password" | sudo -S whoami
  #       sudo rm -rf /tmp/mariadb/
  #       done
        

  # Nginx-PHP7-Mariadb-AMD64:
  #   runs-on: ubuntu-latest
  #   steps:
  #   - uses: actions/checkout@v2
  #   - name: Build the Docker image nginx php 7.4
  #     run: docker-compose -f "docker-compose.yml" up -d --build
  #     env:
  #         PHP_VERSION: "7.4"
  #         XDEBUG: true
  #         DISPLAY_PHPERROR: true
  #         SERVER_ROOT:  /var/www/
  #         APP_CODE_PATH_HOST: /tmp/app
  #         DB_NAME: test
  #         DB_USER:  admin
  #         DB_PASSWORD:  password
  #         DB_ROOT_PASSWORD: password
  #         DATA_PATH_HOST: /tmp/db
  #         MARIADB_VERSION:  10.7
  #   - name: PHP version check
  #     run : docker exec lemp-stack_nginx_1 php -v
  #   - name: Mongodb driver check
  #     run:  docker exec lemp-stack_nginx_1 php -m | grep mongo
  #   - name: Mysql Driver check
  #     run: docker exec lemp-stack_nginx_1 php -m | grep mysqli
  #   - name: Composer test
  #     run: docker exec lemp-stack_nginx_1 composer
  #   - name: Web site Test
  #     run: |
  #       docker exec lemp-stack_nginx_1 sudo wget -O /var/www/index.php https://raw.githubusercontent.com/deck-app/stack-preview-screen/main/install/index.html
  #       sudo curl -I --http2 http://localhost:5590/
  #   - name: Laravel8 test
  #     run:  docker exec lemp-stack_nginx_1 sudo composer create-project --prefer-dist laravel/laravel:^8.0
  #   - name: Verify MariaDB running from host, create Database and show Database
  #     run: |
  #       while ! docker exec lemp-stack_mariadb_1 mysqladmin --user=root --password=password --host "mariadb" ping --silent &> /dev/null ; do
  #           echo "Waiting for database connection..."
  #           sleep 2
  #       done
  #   - name: Check MariaDB version
  #     run:  docker exec lemp-stack_mariadb_1 mysql -uroot -ppassword -e "SHOW VARIABLES LIKE '%version%';"
  #   - name: Verify MariaDB database from user
  #     run:  docker exec lemp-stack_mariadb_1 mysql -uadmin -ppassword -e "SHOW DATABASES"
  #   - name: Create a Database
  #     run:  docker exec lemp-stack_mariadb_1 mysql -uroot -ppassword -e "CREATE DATABASE deckapp"
  #   - name: Verify Database create or not
  #     run:  docker exec lemp-stack_mariadb_1 mysql -uroot -ppassword -e "SHOW DATABASES"
  #   - name: Database connection check
  #     run: |
  #       docker exec lemp-stack_nginx_1 sudo wget -O /var/www/db.php https://raw.githubusercontent.com/nabad600/apache_php/master/connection.php
  #       docker exec lemp-stack_nginx_1 sudo php /var/www/db.php
  #   - name: Destroy Container and file
  #     run:  |
  #       docker-compose down
  #       echo "y" | docker image prune -a
  #       echo "y" | docker volume prune
  #       sudo rm -rf /tmp/app
  #       sudo rm -rf /tmp/db
  # Nginx-PHP7-Mariadb-ARM64:
  #   runs-on: self-hosted
  #   steps:
  #   - uses: actions/checkout@v2
  #   - name: Build the Docker image nginx php 7.4
  #     run: docker-compose -f "docker-compose.yml" up -d --build
  #     env:
  #         PHP_VERSION: "7.4"
  #         XDEBUG: true
  #         DISPLAY_PHPERROR: true
  #         SERVER_ROOT:  /var/www/
  #         APP_CODE_PATH_HOST: /tmp/app
  #         DB_NAME: test
  #         DB_USER:  admin
  #         DB_PASSWORD:  password
  #         DB_ROOT_PASSWORD: password
  #         DATA_PATH_HOST: /tmp/mariadb
  #         MARIADB_VERSION:  10.7
  #   - name: PHP version check
  #     run : docker exec lemp-stack_nginx_1 php -v
  #   - name: Mongodb driver check
  #     run:  docker exec lemp-stack_nginx_1 php -m
  #   - name: Mysql Driver check
  #     run: docker exec lemp-stack_nginx_1 php -m | grep mysqli
  #   - name: Composer test
  #     run: docker exec lemp-stack_nginx_1 composer
  #   - name: Web site Test
  #     run: |
  #       docker exec lemp-stack_nginx_1 sudo wget -O /var/www/index.php https://raw.githubusercontent.com/deck-app/stack-preview-screen/main/install/index.html
  #       curl -i http://localhost:5590/
  #   - name: Laravel8 test
  #     run:  docker exec lemp-stack_nginx_1 sudo composer create-project --prefer-dist laravel/laravel:^8.0
  #   - name: Verify MariaDB running from host, create Database and show Database
  #     run: |
  #       while ! docker exec lemp-stack_mariadb_1 mysqladmin --user=root --password=password --host "mariadb" ping --silent &> /dev/null ; do
  #           echo "Waiting for database connection..."
  #           sleep 2
  #       done
  #   - name: Check MariaDB version
  #     run:  docker exec lemp-stack_mariadb_1 mysql -uroot -ppassword -e "SHOW VARIABLES LIKE '%version%';"
  #   - name: Verify MariaDB database from user
  #     run:  docker exec lemp-stack_mariadb_1 mysql -uadmin -ppassword -e "SHOW DATABASES"
  #   - name: Create a Database
  #     run:  docker exec lemp-stack_mariadb_1 mysql -uroot -ppassword -e "CREATE DATABASE deckapp"
  #   - name: Verify Database create or not
  #     run:  docker exec lemp-stack_mariadb_1 mysql -uroot -ppassword -e "SHOW DATABASES"
  #   - name: Database connection check
  #     run: |
  #       docker exec lemp-stack_nginx_1 sudo wget -O /var/www/db.php https://raw.githubusercontent.com/nabad600/apache_php/master/connection.php
  #       docker exec lemp-stack_nginx_1 sudo php /var/www/db.php
  #   - name: Destroy Container 
  #     run: |
  #       docker-compose down
  #       echo "y" | docker system prune -a
  #       while [ -d /tmp/app ]; do
  #       echo "password" | sudo -S whoami
  #       sudo rm -rf /tmp/app/
  #       done
  #       while [ -d /tmp/mariadb ]; do
  #       echo "password" | sudo -S whoami
  #       sudo rm -rf /tmp/mariadb/
  #       done
  

  # Nginx-PHP72-Mariadb-AMD64:
  #   runs-on: ubuntu-latest
  #   steps:
  #   - uses: actions/checkout@v2
  #   - name: Build the Docker image nginx php 7.2
  #     run: docker-compose -f "docker-compose.yml" up -d --build
  #     env:
  #         PHP_VERSION: "7.2"
  #         XDEBUG: true
  #         DISPLAY_PHPERROR: true
  #         SERVER_ROOT:  /var/www/
  #         APP_CODE_PATH_HOST: /tmp/app
  #         DB_NAME: test
  #         DB_USER:  admin
  #         DB_PASSWORD:  password
  #         DB_ROOT_PASSWORD: password
  #         DATA_PATH_HOST: /tmp/db
  #         MARIADB_VERSION:  10.7
  #   - name: PHP version check
  #     run : docker exec lemp-stack_nginx_1 php -v
  #   - name: Mongodb driver check
  #     run:  docker exec lemp-stack_nginx_1 php -m | grep mongo
  #   - name: Mysql Driver check
  #     run: docker exec lemp-stack_nginx_1 php -m | grep mysqli
  #   - name: Composer test
  #     run: docker exec lemp-stack_nginx_1 composer
  #   - name: Web site Test
  #     run: |
  #       docker exec lemp-stack_nginx_1 sudo wget -O /var/www/index.php https://raw.githubusercontent.com/deck-app/stack-preview-screen/main/install/index.html
  #       sudo curl -I --http2 http://localhost:5590/
  #   - name: Verify MariaDB running from host, create Database and show Database
  #     run: |
  #       while ! docker exec lemp-stack_mariadb_1 mysqladmin --user=root --password=password --host "mariadb" ping --silent &> /dev/null ; do
  #           echo "Waiting for database connection..."
  #           sleep 2
  #       done
  #   - name: Check MariaDB version
  #     run:  docker exec lemp-stack_mariadb_1 mysql -uroot -ppassword -e "SHOW VARIABLES LIKE '%version%';"
  #   - name: Verify MariaDB database from user
  #     run:  docker exec lemp-stack_mariadb_1 mysql -uadmin -ppassword -e "SHOW DATABASES"
  #   - name: Create a Database
  #     run:  docker exec lemp-stack_mariadb_1 mysql -uroot -ppassword -e "CREATE DATABASE deckapp"
  #   - name: Verify Database create or not
  #     run:  docker exec lemp-stack_mariadb_1 mysql -uroot -ppassword -e "SHOW DATABASES"
  #   - name: Database connection check
  #     run: |
  #       docker exec lemp-stack_nginx_1 sudo wget -O /var/www/db.php https://raw.githubusercontent.com/nabad600/apache_php/master/connection.php
  #       docker exec lemp-stack_nginx_1 sudo php /var/www/db.php
  #   - name: Destroy Container and file
  #     run:  |
  #       docker-compose down
  #       echo "y" | docker image prune -a
  #       echo "y" | docker volume prune
  #       sudo rm -rf /tmp/app
  #       sudo rm -rf /tmp/db
  # Nginx-PHP72-Mariadb-ARM64:
  #   runs-on: self-hosted
  #   steps:
  #   - uses: actions/checkout@v2
  #   - name: Build the Docker image nginx php 7.2
  #     run: docker-compose -f "docker-compose.yml" up -d --build
  #     env:
  #         PHP_VERSION: "7.2"
  #         XDEBUG: true
  #         DISPLAY_PHPERROR: true
  #         SERVER_ROOT:  /var/www/
  #         APP_CODE_PATH_HOST: /tmp/app
  #         DB_NAME: test
  #         DB_USER:  admin
  #         DB_PASSWORD:  password
  #         DB_ROOT_PASSWORD: password
  #         DATA_PATH_HOST: /tmp/mariadb
  #         MARIADB_VERSION:  10.7
  #   - name: PHP version check
  #     run : docker exec lemp-stack_nginx_1 php -v
  #   - name: Mongodb driver check
  #     run:  docker exec lemp-stack_nginx_1 php -m
  #   - name: Mysql Driver check
  #     run: docker exec lemp-stack_nginx_1 php -m | grep mysqli
  #   - name: Composer test
  #     run: docker exec lemp-stack_nginx_1 composer
  #   - name: Web site Test
  #     run: |
  #       docker exec lemp-stack_nginx_1 sudo wget -O /var/www/index.php https://raw.githubusercontent.com/deck-app/stack-preview-screen/main/install/index.html
  #       curl -i http://localhost:5590/
  #   - name: Verify MariaDB running from host, create Database and show Database
  #     run: |
  #       while ! docker exec lemp-stack_mariadb_1 mysqladmin --user=root --password=password --host "mariadb" ping --silent &> /dev/null ; do
  #           echo "Waiting for database connection..."
  #           sleep 2
  #       done
  #   - name: Check MariaDB version
  #     run:  docker exec lemp-stack_mariadb_1 mysql -uroot -ppassword -e "SHOW VARIABLES LIKE '%version%';"
  #   - name: Verify MariaDB database from user
  #     run:  docker exec lemp-stack_mariadb_1 mysql -uadmin -ppassword -e "SHOW DATABASES"
  #   - name: Create a Database
  #     run:  docker exec lemp-stack_mariadb_1 mysql -uroot -ppassword -e "CREATE DATABASE deckapp"
  #   - name: Verify Database create or not
  #     run:  docker exec lemp-stack_mariadb_1 mysql -uroot -ppassword -e "SHOW DATABASES"
  #   - name: Database connection check
  #     run: |
  #       docker exec lemp-stack_nginx_1 sudo wget -O /var/www/db.php https://raw.githubusercontent.com/nabad600/apache_php/master/connection.php
  #       docker exec lemp-stack_nginx_1 sudo php /var/www/db.php
  #   - name: Destroy Container 
  #     run: |
  #       docker-compose down
  #       echo "y" | docker system prune -a
  #       while [ -d /tmp/app ]; do
  #       echo "password" | sudo -S whoami
  #       sudo rm -rf /tmp/app/
  #       done
  #       while [ -d /tmp/mariadb ]; do
  #       echo "password" | sudo -S whoami
  #       sudo rm -rf /tmp/mariadb/
  #       done
  

  # Nginx-PHP71-Mariadb-AMD64:
  #   runs-on: ubuntu-latest
  #   steps:
  #   - uses: actions/checkout@v2
  #   - name: Build the Docker image nginx php 7.1
  #     run: docker-compose -f "docker-compose.yml" up -d --build
  #     env:
  #         PHP_VERSION: "7.1"
  #         XDEBUG: true
  #         DISPLAY_PHPERROR: true
  #         SERVER_ROOT:  /var/www/
  #         APP_CODE_PATH_HOST: /tmp/app
  #         DB_NAME: test
  #         DB_USER:  admin
  #         DB_PASSWORD:  password
  #         DB_ROOT_PASSWORD: password
  #         DATA_PATH_HOST: /tmp/db
  #         MARIADB_VERSION:  10.7
  #   - name: PHP version check
  #     run : docker exec lemp-stack_nginx_1 php -v
  #   - name: Mysql Driver check
  #     run: docker exec lemp-stack_nginx_1 php -m | grep mysqli
  #   - name: Composer test
  #     run: docker exec lemp-stack_nginx_1 composer
  #   - name: Web site Test
  #     run: |
  #       docker exec lemp-stack_nginx_1 sudo wget -O /var/www/index.php https://raw.githubusercontent.com/deck-app/stack-preview-screen/main/install/index.html
  #       sudo curl -I --http2 http://localhost:5590/
  #   - name: Verify MariaDB running from host, create Database and show Database
  #     run: |
  #       while ! docker exec lemp-stack_mariadb_1 mysqladmin --user=root --password=password --host "mariadb" ping --silent &> /dev/null ; do
  #           echo "Waiting for database connection..."
  #           sleep 2
  #       done
  #   - name: Check MariaDB version
  #     run:  docker exec lemp-stack_mariadb_1 mysql -uroot -ppassword -e "SHOW VARIABLES LIKE '%version%';"
  #   - name: Verify MariaDB database from user
  #     run:  docker exec lemp-stack_mariadb_1 mysql -uadmin -ppassword -e "SHOW DATABASES"
  #   - name: Create a Database
  #     run:  docker exec lemp-stack_mariadb_1 mysql -uroot -ppassword -e "CREATE DATABASE deckapp"
  #   - name: Verify Database create or not
  #     run:  docker exec lemp-stack_mariadb_1 mysql -uroot -ppassword -e "SHOW DATABASES"
  #   - name: Database connection check
  #     run: |
  #       docker exec lemp-stack_nginx_1 sudo wget -O /var/www/db.php https://raw.githubusercontent.com/nabad600/apache_php/master/connection.php
  #       docker exec lemp-stack_nginx_1 sudo php /var/www/db.php
  #   - name: Destroy Container and file
  #     run:  |
  #       docker-compose down
  #       echo "y" | docker image prune -a
  #       echo "y" | docker volume prune
  #       sudo rm -rf /tmp/app
  #       sudo rm -rf /tmp/db
  # Nginx-PHP71-Mariadb-ARM64:
  #   runs-on: self-hosted
  #   steps:
  #   - uses: actions/checkout@v2
  #   - name: Build the Docker image nginx php 7.1
  #     run: docker-compose -f "docker-compose.yml" up -d --build
  #     env:
  #         PHP_VERSION: "7.1"
  #         XDEBUG: true
  #         DISPLAY_PHPERROR: true
  #         SERVER_ROOT:  /var/www/
  #         APP_CODE_PATH_HOST: /tmp/app
  #         DB_NAME: test
  #         DB_USER:  admin
  #         DB_PASSWORD:  password
  #         DB_ROOT_PASSWORD: password
  #         DATA_PATH_HOST: /tmp/mariadb
  #         MARIADB_VERSION:  10.7
  #   - name: PHP version check
  #     run : docker exec lemp-stack_nginx_1 php -v
  #   - name: Mongodb driver check
  #     run:  docker exec lemp-stack_nginx_1 php -m
  #   - name: Mysql Driver check
  #     run: docker exec lemp-stack_nginx_1 php -m | grep mysqli
  #   - name: Composer test
  #     run: docker exec lemp-stack_nginx_1 composer
  #   - name: Web site Test
  #     run: |
  #       docker exec lemp-stack_nginx_1 sudo wget -O /var/www/index.php https://raw.githubusercontent.com/deck-app/stack-preview-screen/main/install/index.html
  #       curl -i http://localhost:5590/
  #   - name: Verify MariaDB running from host, create Database and show Database
  #     run: |
  #       while ! docker exec lemp-stack_mariadb_1 mysqladmin --user=root --password=password --host "mariadb" ping --silent &> /dev/null ; do
  #           echo "Waiting for database connection..."
  #           sleep 2
  #       done
  #   - name: Check MariaDB version
  #     run:  docker exec lemp-stack_mariadb_1 mysql -uroot -ppassword -e "SHOW VARIABLES LIKE '%version%';"
  #   - name: Verify MariaDB database from user
  #     run:  docker exec lemp-stack_mariadb_1 mysql -uadmin -ppassword -e "SHOW DATABASES"
  #   - name: Create a Database
  #     run:  docker exec lemp-stack_mariadb_1 mysql -uroot -ppassword -e "CREATE DATABASE deckapp"
  #   - name: Verify Database create or not
  #     run:  docker exec lemp-stack_mariadb_1 mysql -uroot -ppassword -e "SHOW DATABASES"
  #   - name: Database connection check
  #     run: |
  #       docker exec lemp-stack_nginx_1 sudo wget -O /var/www/db.php https://raw.githubusercontent.com/nabad600/apache_php/master/connection.php
  #       docker exec lemp-stack_nginx_1 sudo php /var/www/db.php
  #   - name: Destroy Container 
  #     run: |
  #       docker-compose down
  #       echo "y" | docker system prune -a
  #       while [ -d /tmp/app ]; do
  #       echo "password" | sudo -S whoami
  #       sudo rm -rf /tmp/app/
  #       done
  #       while [ -d /tmp/mariadb ]; do
  #       echo "password" | sudo -S whoami
  #       sudo rm -rf /tmp/mariadb/
  #       done

  
  Nginx-PHP5-Mariadb-AMD64:
    strategy:
      matrix:
        os: [ubuntu-latest, self-hosted]
    runs-on: ${{ matrix.os }}
    env:
      SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
    steps:
    - uses: actions/checkout@v2
    - name: Build the Docker image nginx php 5.6
      run: docker-compose -f "docker-compose.yml" up -d --build
      env:
          PHP_VERSION: "5.6"
          XDEBUG: true
          DISPLAY_PHPERROR: true
          SERVER_ROOT:  /var/www/
          APP_CODE_PATH_HOST: /tmp/app/
          DB_NAME: test
          DB_USER:  admin
          DB_PASSWORD:  password
          DB_ROOT_PASSWORD: password
          DATA_PATH_HOST: /tmp/db/
          MARIADB_VERSION:  10.7
    - name: PHP version check
      run : docker exec lemp-stack_nginx_1 php -v
    - name: Mysql Driver check
      run: docker exec lemp-stack_nginx_1 php -m | grep mysqli
    - name: Composer test
      run: docker exec lemp-stack_nginx_1 composer
    - name: Web site Test
      run: |
        sudo wget -O /tmp/app/index.php https://raw.githubusercontent.com/deck-app/stack-preview-screen/main/install/index.html
        sudo curl -I --http2 http://localhost:5590/
    - name: Verify MariaDB running from host, create Database and show Database
      run: |
        while ! docker exec lemp-stack_mariadb_1 mysqladmin --user=root --password=password --host "mariadb" ping --silent &> /dev/null ; do
            echo "Waiting for database connection..."
            sleep 2
        done
    - name: Check MariaDB version
      run:  docker exec lemp-stack_mariadb_1 mysql -uroot -ppassword -e "SHOW VARIABLES LIKE '%version%';"
    - name: Verify MariaDB database from user
      run:  docker exec lemp-stack_mariadb_1 mysql -uadmin -ppassword -e "SHOW DATABASES"
    - name: Create a Database
      run:  docker exec lemp-stack_mariadb_1 mysql -uroot -ppassword -e "CREATE DATABASE deckapp"
    - name: Verify Database create or not
      run:  docker exec lemp-stack_mariadb_1 mysql -uroot -ppassword -e "SHOW DATABASES"
    # - name: Database connection check
    #   run: |
    #     sudo wget -O /tmp/app/db.php https://raw.githubusercontent.com/nabad600/apache_php/master/connection.php
    #     docker exec lemp-stack_nginx_1 sudo php /var/www/db.php
    - name: Destroy Container and file
      run:  |
        docker-compose down
        echo "y" | docker system prune -a
        echo "y" | docker image prune
        echo "y" | docker volume prune
        sudo rm -rf /tmp/app
        sudo rm -rf /tmp/db
    - name: Slack Notification
      uses: 8398a7/action-slack@v3
      with: 
        status: ${{ job.status }}
        fields: repo,message,commit,author,action,eventName,ref,workflow
        channel: '#github_action_status'
      if: always()
  # Nginx-PHP5-Mariadb-ARM64:
  #   runs-on: self-hosted
  #   steps:
  #   - uses: actions/checkout@v2
  #   - name: Build the Docker image nginx php 5.6
  #     run: docker-compose -f "docker-compose.yml" up -d --build
  #     env:
  #         PHP_VERSION: "5.6"
  #         XDEBUG: true
  #         DISPLAY_PHPERROR: true
  #         SERVER_ROOT:  /var/www/
  #         APP_CODE_PATH_HOST: /tmp/app/
  #         DB_NAME: test
  #         DB_USER:  admin
  #         DB_PASSWORD:  password
  #         DB_ROOT_PASSWORD: password
  #         DATA_PATH_HOST: /tmp/mariadb/
  #         MARIADB_VERSION:  10.7
  #   - name: PHP version check
  #     run : docker exec lemp-stack_nginx_1 php -v
  #   - name: Mysql Driver check
  #     run: docker exec lemp-stack_nginx_1 php -m | grep mysqli
  #   - name: Composer test
  #     run: docker exec lemp-stack_nginx_1 composer
  #   - name: Web site Test
  #     run: |
  #       sudo wget -O /tmp/app/index.php https://raw.githubusercontent.com/deck-app/stack-preview-screen/main/install/index.html
  #       curl -i http://localhost:5590/
  #   - name: Verify MariaDB running from host, create Database and show Database
  #     run: |
  #       while ! docker exec lemp-stack_mariadb_1 mysqladmin --user=root --password=password --host "mariadb" ping --silent &> /dev/null ; do
  #           echo "Waiting for database connection..."
  #           sleep 2
  #       done
  #   - name: Check MariaDB version
  #     run:  docker exec lemp-stack_mariadb_1 mysql -uroot -ppassword -e "SHOW VARIABLES LIKE '%version%';"
  #   - name: Verify MariaDB database from user
  #     run:  docker exec lemp-stack_mariadb_1 mysql -uadmin -ppassword -e "SHOW DATABASES"
  #   - name: Create a Database
  #     run:  docker exec lemp-stack_mariadb_1 mysql -uroot -ppassword -e "CREATE DATABASE deckapp"
  #   - name: Verify Database create or not
  #     run:  docker exec lemp-stack_mariadb_1 mysql -uroot -ppassword -e "SHOW DATABASES"
  #   # - name: Database connection check
  #   #   run: |
  #   #     wget -O /tmp/app/db.php https://raw.githubusercontent.com/nabad600/apache_php/master/connection.php
  #   #     docker exec lemp-stack_nginx_1 sudo php /var/www/db.php
  #   - name: Destroy Container 
  #     run: |
  #       docker-compose down
  #       echo "y" | docker system prune -a
  #       while [ -d /tmp/app ]; do
  #       echo "password" | sudo -S whoami
  #       sudo rm -rf /tmp/app/
  #       done
  #       while [ -d /tmp/mariadb ]; do
  #       echo "password" | sudo -S whoami
  #       sudo rm -rf /tmp/mariadb/
  #       done
        
  
